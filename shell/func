# This is a config to be sourced for user based functions
# bash based script

pkmgr="sudo pacman"
hash paru 2>/dev/null && pkmgr=paru
hash yay 2>/dev/null && pkmgr=yay

recent(){
    echo $(/usr/bin/ls -t | head -n 1)
}

getline(){
  # This function will extract any line from a file when get piped 
  [ $# -eq 1 ] || return
  sum=""
  while read data;
  do
    sum+="$data\n"
  done
  echo "$sum" | head -n "$1" | tail -n 1
}

sync(){
  $pkmgr -Sy 
}

clean(){
  toclean=( $($pkmgr -Qtdq) )
  [[ ${#toclean} == 0 ]] && return 
  $pkmgr -Rns $toclean
  clean
} 

update(){
  $pkmgr -Syu
}

# Fzf 
hash fzf 2>/dev/null && {
  gd() {
    preview="git diff $@ --color=always -- {-1}"
    git diff $@ --name-only | fzf -m --ansi --preview $preview
  }

  fcd(){
    dir_path="."
    [ ! -z $1 ] && dir_path="$1"
    FIND="find $dir_path -path \"*/.git\" -prune -o -type d"
    PREVIEW=""
    hash fd 2>/dev/null && FIND="fd $dir_path --type d --hidden"
    hash pistol 2>/dev/null && PREVIEW="--preview='pistol {}'"

    command="$FIND | fzf --height 60% --layout=reverse $PREVIEW"
    VAR=$(eval $command)

    [ -z $VAR ] && VAR=$(pwd)
    cd $VAR
  }

  search-install(){
    $pkmgr -Slq | fzf --bind=ctrl-space:select --bind=alt-space:deselect --multi --preview "$pkmgr -Si {1}" | xargs -ro $pkmgr -S
    return 
  }
  search-remove(){
    $pkmgr -Qq | fzf --bind=ctrl-space:select --bind=alt-space:deselect --multi --preview "$pkmgr -Qi {1}" | xargs -ro $pkmgr -Rns
    return
  }

  get(){
    [[ $# -eq 0 ]] && search-install
    if [[ "$1" == "-r" ]];then
      if [[ $# -eq 1 ]];then
        search-remove
      else
        $pkmgr -Rns "${@:2}"
        return
      fi
    fi
    $pkmgr -S "$@"
  }
}

update-grub(){
  hash grub-mkconfig &>/dev/null || return 0
  sudo grub-mkconfig -o /boot/grub/grub.cfg
  echo "Updated Grub!!"
  echo "Now commenting echo in /boot/grub/grub.cfg"
  sudo sed -i 's/echo/#echo/g' /boot/grub/grub.cfg 
  echo "Done Updating...."
}

lsbin(){
  # This lists all binaries available to system path
  plist=($(echo $PATH | tr ":" "\n"))
  for i in ${plist[@]}
  do
    /usr/bin/ls -1 "$i"
  done
}

open(){
  hash xdg-open 2>/dev/null || return 1
  [ $# -eq 1 ] && {
    xdg-open "$1" & disown &>/dev/null
    return
  }
}
